apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().time.hashCode()
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.cloud4magic.freecast"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters(
                    'armeabi',
                    'armeabi-v7a',
//                    'arm64-v8a',
//                    'mips',
//                    'mips64',
//                    'x86',
//                    'x86_64'
            )
        }
    }

    signingConfigs {
        release {
            storeFile file('freecast.jks')
            storePassword '123456'
            keyAlias 'freecast'
            keyPassword '123456'
        }

        debug {
            storeFile file('freecast.jks')
            storePassword '123456'
            keyAlias 'freecast'
            keyPassword '123456'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_LOG", "true"
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        release {
            buildConfigField "boolean", "DEBUG_LOG", "false"
            debuggable false
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // update apk name
                def fileName = outputFile.name.replace("app", "Freestream-${defaultConfig.versionName}")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs', 'src/main/libs']
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/jason-all.jar')
    compile(name: 'wisview.sdk', ext: 'aar')

    //android base
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //test
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    //di
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    // animation
    compile 'com.nineoldandroids:library:2.4.0'

    // glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    //facebook
    compile 'com.facebook.android:facebook-android-sdk:4.+'
    //net
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'

    //rx
    compile 'io.reactivex:rxjava:1.2.3'
    compile 'io.reactivex:rxandroid:1.2.1'

    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.11'

    // leak
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
}
